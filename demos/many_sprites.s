;
; File generated by cc65 v 2.17 - Git 0576fe5
;
	.fopt		compiler,"cc65 v 2.17 - Git 0576fe5"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_clrscr
	.import		_INITSPRITES
	.import		_INITRASTER
	.import		_SPRX
	.import		_SPRY
	.import		_SPRC
	.import		_SPRF
	.importzp	_NUMSPRITES
	.importzp	_SPRUPDATEFLAG
	.importzp	_MULTIPLEX_DONE
	.export		_yValues
	.export		_main

.segment	"RODATA"

_yValues:
	.byte	$20
	.byte	$23
	.byte	$26
	.byte	$29
	.byte	$2C
	.byte	$2F
	.byte	$31
	.byte	$34
	.byte	$36
	.byte	$38
	.byte	$3A
	.byte	$3C
	.byte	$3D
	.byte	$3E
	.byte	$3F
	.byte	$3F
	.byte	$40
	.byte	$3F
	.byte	$3F
	.byte	$3E
	.byte	$3D
	.byte	$3C
	.byte	$3A
	.byte	$38
	.byte	$36
	.byte	$34
	.byte	$31
	.byte	$2F
	.byte	$2C
	.byte	$29
	.byte	$26
	.byte	$23
	.byte	$20
	.byte	$1C
	.byte	$19
	.byte	$16
	.byte	$13
	.byte	$10
	.byte	$0E
	.byte	$0B
	.byte	$09
	.byte	$07
	.byte	$05
	.byte	$03
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$07
	.byte	$09
	.byte	$0B
	.byte	$0E
	.byte	$10
	.byte	$13
	.byte	$16
	.byte	$19
	.byte	$1C
	.byte	$20
	.byte	$23
	.byte	$26
	.byte	$29
	.byte	$2C
	.byte	$2F
	.byte	$31
	.byte	$34
	.byte	$36
	.byte	$38
	.byte	$3A
	.byte	$3C
	.byte	$3D
	.byte	$3E
	.byte	$3F
	.byte	$3F
	.byte	$40
	.byte	$3F
	.byte	$3F
	.byte	$3E
	.byte	$3D
	.byte	$3C
	.byte	$3A
	.byte	$38
	.byte	$36
	.byte	$34
	.byte	$31
	.byte	$2F
	.byte	$2C
	.byte	$29
	.byte	$26
	.byte	$23
	.byte	$20
	.byte	$1C
	.byte	$19
	.byte	$16
	.byte	$13
	.byte	$10
	.byte	$0E
	.byte	$0B
	.byte	$09
	.byte	$07
	.byte	$05
	.byte	$03
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$07
	.byte	$09
	.byte	$0B
	.byte	$0E
	.byte	$10
	.byte	$13
	.byte	$16
	.byte	$19
	.byte	$1C
	.byte	$20
	.byte	$23
	.byte	$26
	.byte	$29
	.byte	$2C
	.byte	$2F
	.byte	$31
	.byte	$34
	.byte	$36
	.byte	$38
	.byte	$3A
	.byte	$3C
	.byte	$3D
	.byte	$3E
	.byte	$3F
	.byte	$3F
	.byte	$40
	.byte	$3F
	.byte	$3F
	.byte	$3E
	.byte	$3D
	.byte	$3C
	.byte	$3A
	.byte	$38
	.byte	$36
	.byte	$34
	.byte	$31
	.byte	$2F
	.byte	$2C
	.byte	$29
	.byte	$26
	.byte	$23
	.byte	$20
	.byte	$1C
	.byte	$19
	.byte	$16
	.byte	$13
	.byte	$10
	.byte	$0E
	.byte	$0B
	.byte	$09
	.byte	$07
	.byte	$05
	.byte	$03
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$07
	.byte	$09
	.byte	$0B
	.byte	$0E
	.byte	$10
	.byte	$13
	.byte	$16
	.byte	$19
	.byte	$1C
	.byte	$20
	.byte	$23
	.byte	$26
	.byte	$29
	.byte	$2C
	.byte	$2F
	.byte	$31
	.byte	$34
	.byte	$36
	.byte	$38
	.byte	$3A
	.byte	$3C
	.byte	$3D
	.byte	$3E
	.byte	$3F
	.byte	$3F
	.byte	$40
	.byte	$3F
	.byte	$3F
	.byte	$3E
	.byte	$3D
	.byte	$3C
	.byte	$3A
	.byte	$38
	.byte	$36
	.byte	$34
	.byte	$31
	.byte	$2F
	.byte	$2C
	.byte	$29
	.byte	$26
	.byte	$23
	.byte	$20
	.byte	$1C
	.byte	$19
	.byte	$16
	.byte	$13
	.byte	$10
	.byte	$0E
	.byte	$0B
	.byte	$09
	.byte	$07
	.byte	$05
	.byte	$03
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$07
	.byte	$09
	.byte	$0B
	.byte	$0E
	.byte	$10
	.byte	$13
	.byte	$16
	.byte	$19
	.byte	$1C

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$00
	jsr     pusha
	jsr     decsp1
	jsr     _INITSPRITES
	jsr     _INITRASTER
	ldx     #$00
	lda     #$06
	sta     $D020
	ldx     #$00
	lda     #$06
	sta     $D021
	ldx     #$00
	lda     #$1A
	sta     _NUMSPRITES
	ldx     #$00
	lda     #$00
	ldy     #$00
	sta     (sp),y
L0119:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldx     #$00
	lda     _NUMSPRITES
	jsr     tosultax
	jne     L011C
	jmp     L011A
L011C:	lda     #<(_SPRF)
	ldx     #>(_SPRF)
	ldy     #$00
	clc
	adc     (sp),y
	bcc     L0123
	inx
L0123:	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$81
	jsr     incaxy
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	cmp     #$1A
	lda     #$00
	ldx     #$00
	rol     a
	jsr     pushax
	ldx     #$00
	lda     #$15
	jsr     tosmulax
	jsr     tosaddax
	ldx     #$00
	ldy     #$00
	jsr     staspidx
	lda     #<(_SPRC)
	ldx     #>(_SPRC)
	ldy     #$00
	clc
	adc     (sp),y
	bcc     L0128
	inx
L0128:	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldx     #$00
	and     #$FD
	ldx     #$00
	ldy     #$00
	jsr     staspidx
	ldy     #$00
	ldx     #$00
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jmp     L0119
L011A:	ldx     #$00
	lda     _NUMSPRITES
	jsr     decax2
	clc
	adc     #<(_SPRX)
	tay
	txa
	adc     #>(_SPRX)
	tax
	tya
	jsr     pushax
	ldx     #$00
	lda     #$78
	ldy     #$00
	jsr     staspidx
	ldx     #$00
	lda     _NUMSPRITES
	jsr     decax1
	clc
	adc     #<(_SPRX)
	tay
	txa
	adc     #>(_SPRX)
	tax
	tya
	jsr     pushax
	ldx     #$00
	lda     #$28
	ldy     #$00
	jsr     staspidx
	jsr     _clrscr
	jmp     L0135
L0131:	lda     _MULTIPLEX_DONE
	jeq     L0135
	ldx     #$00
	lda     _NUMSPRITES
	jsr     decax2
	clc
	adc     #<(_SPRY)
	tay
	txa
	adc     #>(_SPRY)
	tax
	tya
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldx     #$00
	lda     _NUMSPRITES
	jsr     decax1
	clc
	adc     #<(_SPRY)
	tay
	txa
	adc     #>(_SPRY)
	tax
	tya
	jsr     pushax
	ldx     #$00
	lda     #$FF
	jsr     pushax
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	jsr     tossubax
	ldx     #$00
	ldy     #$00
	jsr     staspidx
	ldx     #$00
	lda     #$00
	ldy     #$00
	sta     (sp),y
L013D:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldx     #$00
	lda     _NUMSPRITES
	jsr     decax2
	jsr     tosultax
	jne     L0140
	jmp     L013E
L0140:	lda     #<(_SPRX)
	ldx     #>(_SPRX)
	ldy     #$00
	clc
	adc     (sp),y
	bcc     L0147
	inx
L0147:	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldx     #$00
	lda     #$07
	jsr     tosudivax
	jsr     pushax
	lda     #<(_yValues)
	ldx     #>(_yValues)
	ldy     #$07
	clc
	adc     (sp),y
	bcc     L014C
	inx
L014C:	ldy     #$00
	jsr     ldauidx
	jsr     tosumulax
	jsr     tosaddax
	ldx     #$00
	ldy     #$00
	jsr     staspidx
	lda     #<(_SPRY)
	ldx     #>(_SPRY)
	ldy     #$00
	clc
	adc     (sp),y
	bcc     L014F
	inx
L014F:	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldx     #$00
	and     #$07
	jsr     pushax
	ldx     #$00
	lda     #$19
	jsr     tosumulax
	ldy     #$28
	jsr     incaxy
	jsr     pushax
	lda     #<(_yValues)
	ldx     #>(_yValues)
	ldy     #$05
	clc
	adc     (sp),y
	bcc     L0154
	inx
L0154:	ldy     #$00
	jsr     ldauidx
	jsr     asrax1
	jsr     tosaddax
	ldx     #$00
	ldy     #$00
	jsr     staspidx
	ldy     #$00
	ldx     #$00
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jmp     L013D
L013E:	ldy     #$01
	ldx     #$00
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	ldx     #$00
	lda     #$00
	sta     _MULTIPLEX_DONE
	ldx     #$00
	lda     #$01
	sta     _SPRUPDATEFLAG
L0135:	jmp     L0131
	ldx     #$00
	lda     #$00
	jmp     L0109
L0109:	jsr     incsp2
	rts

.endproc

