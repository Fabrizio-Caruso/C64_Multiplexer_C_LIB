FEATURES {
    STARTADDRESS: default = $0801;
}
SYMBOLS {
    __LOADADDR__:  type = import;
    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0080; #
    __HIMEM__:     type = weak, value = $D000;
    __SIDSTART__:  type = weak, value = $1000;
    __SIDSIZE__:   type = weak, value = $1000;
    __GFXSTART__:  type = weak, value = $2000; # UDGs at $2000-$27FF. Sprites at $2800-$3FFF
    __GFXSIZE__:   type = weak, value = $2800;
    __EXTRASTART__:type = weak, value = $4800;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0002,            size = $001A;
    LOADADDR: file = %O,               start = %S - 2,           size = $0002;
    HEADER:   file = %O, define = yes, start = %S,               size = $000D;
    MAIN:     file = %O, define = yes, start = __HEADER_LAST__,  size = __SIDSTART__ - __HEADER_LAST__, fill = yes;
    SID:      file = %O, define = yes, start = __SIDSTART__,     size = __SIDSIZE__, type = rw,  fill = yes, fillval=$2A;
    GFX:      file = %O, define = yes, start = __GFXSTART__,     size = __GFXSIZE__, type = rw,  fill = yes, fillval=$2A;
    EXTRA:    file = %O, define = yes, start = __EXTRASTART__, type = rw, size = $9800;
    BSS:      file = "",               start = __ONCE_RUN__,     size = __HIMEM__ - __STACKSIZE__ - __ONCE_RUN__;
}
SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    LOADADDR: load = LOADADDR, type = ro;
    EXEHDR:   load = HEADER,   type = ro;
    STARTUP:  load = MAIN,     type = ro;
    LOWCODE:  load = EXTRA,    type = ro,  optional = yes;
    SID:      load = SID,      type = ro;
    CODE:     load = EXTRA,    type = ro;
    RODATA:   load = EXTRA,    type = ro;
    DATA:     load = EXTRA,    type = rw;
    INIT:     load = EXTRA,    type = rw;
    ONCE:     load = EXTRA,    type = ro,  define   = yes;
    GFX:      load = GFX,      type = rw;    
    BSS:      load = BSS,      type = bss, define   = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
